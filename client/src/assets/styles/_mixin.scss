/* Heading */
@mixin heading-xl {
  font-size: 24px;
  font-family: Plus Jakarta Sans;
  font-weight: 700;
  letter-spacing: 0px;
}

@mixin heading-l {
  font-size: 18px;
  font-family: Plus Jakarta Sans;
  font-weight: 700;
  letter-spacing: 0px;
}

@mixin heading-m {
  font-size: 15px;
  font-family: Plus Jakarta Sans;
  font-weight: 700;
  letter-spacing: 0px;
}

@mixin heading-s {
  font-size: 12px;
  font-family: Plus Jakarta Sans;
  font-weight: 700;
  letter-spacing: 2.4000000953674316px;
}

@mixin body-l {
  font-size: 13px;
  font-family: Plus Jakarta Sans;
  font-weight: 500;
  letter-spacing: 0px;
}

@mixin body-m {
  font-size: 12px;
  font-family: Plus Jakarta Sans;
  font-weight: 700;
  letter-spacing: 0px;
}

/* Button */
@mixin btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;

  &:hover {
    cursor: pointer;
    transition: $animate;
  }
}

@mixin btn-primary-l {
  @include btn;
  @include heading-m;
  height: 3rem;
  color: $color-white;
  background: color(btnPr);
  border-radius: 1.5rem;

  &:hover {
    background: color(btnPrHover);
  }
}

@mixin btn-primary-s {
  @include btn;
  @include body-l;
  font-weight: 600;
  height: 2.5rem;
  color: $color-white;
  background: color(btnPr);
  border-radius: 1.25rem;

  &:hover {
    background: color(btnPrHover);
  }
}

@mixin btn-disabled-s {
  @include btn;
  @include body-l;
  font-weight: 600;
  height: 2.5rem;
  color: color(subTitle);
  border-radius: 1.25rem;

  &:hover {
    color: $color-white;
    background: color(subTitle);
  }
}

@mixin btn-secondary {
  @include btn;
  @include body-l;
  font-weight: 600;
  height: 3rem;
  color: $color-main-purple;
  background: color(btnSec);
  border-radius: 1.25rem;

  &:hover {
    background: color(btnSecHover);
  }
}

@mixin btn-destructive {
  @include btn;
  @include body-l;
  font-weight: 600;
  height: 3rem;
  color: $color-white;
  background: $color-red;
  border-radius: 1.25rem;

  &:hover {
    background: $color-red-hover;
  }
}

/* Container */

// DON`T TOUCH

@mixin container($type) {
  @each $name, $value in $grid-bp {
    @media (min-width: $value) {
      @if ($container-mw > $value) {
        @if ($value == 0px) {
          #{$type}-left: $grid-space-side;
          #{$type}-right: $grid-space-side;
        } @else {
          #{$type}-left: calc((100% - $value) / 2);
          #{$type}-right: calc((100% - $value) / 2);
        }
      } @else {
        #{$type}-left: calc((100% - $container-mw) / 2);
        #{$type}-right: calc((100% - $container-mw) / 2);
      }
    }
  }
}

/* Media */

@mixin mediaWidth($width, $value) {
  $value: map-get($media-value, $value);
  @media (#{$value}-width: $width) {
    @content;
  }
}

// Media query by breakpoints

@mixin forMedia($width, $value) {
  $value: map-get($media-value, $value);
  @media (#{$value}-width: $width) {
    @content;
  }
} // helper mixin for @mixin media

@mixin media($name, $value) {
  $width: map-get($grid-bp, $name);
  @include forMedia($width, $value) {
    @content;
  }
}

@mixin forMediaEach($width) {
  @media (min-width: $width) {
    @content;
  }
} // helper mixin for @each and @for (create classes for columns)
